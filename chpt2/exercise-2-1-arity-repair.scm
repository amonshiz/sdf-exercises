(define (compose-checked f g)
  (let ((n (get-arity f)) (m (get-arity g)))
    (define (the-composition . args)
      (assert (= (length args) m))
      (let ((res (apply g args)))
	(assert (= n 1))
	(f res)))
    (restrict-arity the-composition m)))

(define (parallel-combine-checked h f g)
  (let ((n (get-arity f)) (m (get-arity g)) (p (procedure-arity-min (procedure-arity h))))
    (assert (= n m))
    (assert (<= p 2))
    (define (the-combination . args)
      (assert (= (length args) n))
      (h (apply f args) (apply g args)))
    (restrict-arity the-combination n)))
